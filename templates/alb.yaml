---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  EnvironmentValue:
    Type: String
    AllowedValues:
      - local
      - dev
      - qa
      - prod
    Default: local

#############################################################################
Resources:

## External ALB
  ExternalAlb:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      #LoadBalancerAttributes: # If ALB logs are desired, uncomment this and provide a valid bucket.  Not creating a s3 bucket for demo purposes since deleting the bucket would fail on teardown unless the bucket was empty.
      #  - Key: access_logs.s3.enabled
      #    Value: 'true'
      #  - Key: access_logs.s3.bucket
      #    Value: SomeS3Bucket
      #  - Key: idle_timeout.timeout_seconds
      #    Value: '180'
      Name: !Sub "${EnvironmentValue}-ext-alb"
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ExternalAlbSecurityGroup
      Subnets:
        - !Sub "{{resolve:ssm:/${EnvironmentValue}/vpc/dmz-subnet-a:1}}"
        - !Sub "{{resolve:ssm:/${EnvironmentValue}/vpc/dmz-subnet-b:1}}"
        - !Sub "{{resolve:ssm:/${EnvironmentValue}/vpc/dmz-subnet-c:1}}"
      Tags:
        - Key: environment
          Value: !Sub "${EnvironmentValue}"
        - Key: role
          Value: alb
      Type: application
      IpAddressType: ipv4

  # ALB DNS Name Parameter (for use by other templates)
  ExternalAlbDnsName:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub "${EnvironmentValue} external ALB DNS Name"
      Name: !Sub "/${EnvironmentValue}/alb/ext-alb-dns-name"
      Value: !GetAtt ExternalAlb.DNSName
      Type: String

  # ALB Canonical Hosted Zone ID (for use by other templates)
  ExternalAlbHostedZoneId:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub "${EnvironmentValue} exteral ALB Canonical Hosted Zone Id"
      Name: !Sub "/${EnvironmentValue}/alb/ext-alb-hosted-zone-id"
      Value: !GetAtt ExternalAlb.CanonicalHostedZoneID
      Type: String

 #ALB Listener HTTP - Default Action
  ExternalAlbListenerHTTP:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            MessageBody: ":vanish:"
            StatusCode: "503"
      LoadBalancerArn:
        Ref: ExternalAlb
      Port: 80
      Protocol: HTTP

# ALB Listener HTTP ARN (for reference by other templates)
  ExternalAlbListenerHTTPARN:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub "${EnvironmentValue} External ALB Listener HTTP ARN"
      Name: !Sub "/${EnvironmentValue}/alb/ext-alb-listener-http-arn"
      Value: !Ref ExternalAlbListenerHTTP
      Type: String

## Security Group for Public Load Balancer
  ExternalAlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${EnvironmentValue}-ext-alb-sg"
      GroupDescription: Enable HTTP/HTTPS access on port 80/443 to 80/443
      VpcId: !Sub "{{resolve:ssm:/${EnvironmentValue}/vpc/vpc-id:1}}"
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentValue}-ext-alb-sg"
        - Key: environment
          Value: !Ref EnvironmentValue
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  # PublicLoadBalancer SG Parameter (for reference by other templates)
  ExternalAlbSGID:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub "${EnvironmentValue} External ALB security group id"
      Name: !Sub "/${EnvironmentValue}/security-groups/ext-alb-sg-id"
      Value: !Ref ExternalAlbSecurityGroup
      Type: String

## Internal ALB
  InternalAlb:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      #LoadBalancerAttributes: # If ALB logs are desired, uncomment this and provide a valid bucket.  Not creating a s3 bucket for demo purposes since deleting the bucket would fail on teardown unless the bucket was empty.
      #  - Key: access_logs.s3.enabled
      #    Value: 'true'
      #  - Key: access_logs.s3.bucket
      #    Value: SomeS3Bucket
      #  - Key: idle_timeout.timeout_seconds
      #    Value: '180'
      Name: !Sub "${EnvironmentValue}-int-alb"
      Scheme: internal
      SecurityGroups:
        - !Ref InternalAlbSecurityGroup
      Subnets:
        - !Sub "{{resolve:ssm:/${EnvironmentValue}/vpc/dmz-subnet-a:1}}"
        - !Sub "{{resolve:ssm:/${EnvironmentValue}/vpc/dmz-subnet-b:1}}"
        - !Sub "{{resolve:ssm:/${EnvironmentValue}/vpc/dmz-subnet-c:1}}"
      Tags:
        - Key: environment
          Value: !Sub "${EnvironmentValue}"
        - Key: role
          Value: alb
      Type: application
      IpAddressType: ipv4

  # Internal ALB DNS Name Parameter (for use by other templates)
  InternalAlbDnsName:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub "${EnvironmentValue} internal ALB DNS Name"
      Name: !Sub "/${EnvironmentValue}/alb/int-alb-dns-name"
      Value: !GetAtt InternalAlb.DNSName
      Type: String

  # Internal ALB Canonical Hosted Zone ID (for use by other templates)
  InternalAlbHostedZoneId:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub "${EnvironmentValue} internal ALB Canonical Hosted Zone Id"
      Name: !Sub "/${EnvironmentValue}/alb/int-alb-hosted-zone-id"
      Value: !GetAtt InternalAlb.CanonicalHostedZoneID
      Type: String

 # Internalk ALB Listener HTTP - Default Action
  InternalAlbListenerHTTP:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            MessageBody: ":vanish:"
            StatusCode: "503"
      LoadBalancerArn:
        Ref: InternalAlb
      Port: 8080
      Protocol: HTTP

# ALB Listener HTTP ARN (for reference by other templates)
  InternalAlbListenerHTTPARN:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub "${EnvironmentValue} Internal ALB Listener HTTP ARN"
      Name: !Sub "/${EnvironmentValue}/alb/int-alb-listener-http-arn"
      Value: !Ref InternalAlbListenerHTTP
      Type: String

## Define our rules here
  
## Security Group for Internal Load Balancer
  InternalAlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${EnvironmentValue}-int-alb-sg"
      GroupDescription: Internal ALB security group
      VpcId: !Sub "{{resolve:ssm:/${EnvironmentValue}/vpc/vpc-id:1}}"
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentValue}-int-alb-sg"
        - Key: environment
          Value: !Ref EnvironmentValue
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  # PublicLoadBalancer SG Parameter (for reference by other templates)
  InternalAlbSGID:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub "${EnvironmentValue} Internal ALB security group id"
      Name: !Sub "/${EnvironmentValue}/security-groups/int-alb-sg-id"
      Value: !Ref InternalAlbSecurityGroup
      Type: String

  InternalAlbDnsRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Sub "{{resolve:ssm:/${EnvironmentValue}/dns/${EnvironmentValue}.newsfeed.internal-HostedZoneId:1}}"
      RecordSets:
      - Name: !Sub "*.${EnvironmentValue}.newsfeed.internal"
        Type: A
        AliasTarget:
          DNSName: !GetAtt InternalAlb.DNSName
          HostedZoneId: !GetAtt InternalAlb.CanonicalHostedZoneID
