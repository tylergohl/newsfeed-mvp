AWSTemplateFormatVersion: '2010-09-09'
Description: Template that creates ASG / security groups for Quotes service

Parameters:
  InstanceAmi: 
    Type : AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2 # Grabs the latest Amazon Linux 2 AMI - this may or may not be desirable in a prod scenario.  We could override this with a parameter file for prod or statically assign an SSM parameter
    Description: The AMI ID for the instance
  InstanceType: 
    Type: String
    Default: t3.micro
    Description: Select instance type.
  KeyName: 
    Type: AWS::EC2::KeyPair::KeyName
    Default: newsfeed-keypair
    Description: Enter the KeyPair name used for the instance.
  AsgDesiredCapacity: 
    Type: Number
    Default: 1
    Description: The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain.
  AsgMinSize: 
    Type: Number
    Default: 0
    Description: The minimum size of the Auto Scaling group.
  AsgMaxSize: 
    Type: Number
    Default: 1
    Description: The maximum size of the Auto Scaling group.
  EnvironmentValue:
    Type: String
    Default: local
    AllowedValues:
      - local
      - dev
      - qa
      - prod
    Description: The environment the stack is being deployed into.

Conditions:
  ProdLikeEnvironment: !Or [!Equals [!Ref EnvironmentValue, prod], !Equals [!Ref EnvironmentValue, qa]] # Used to limit cost / complexity of lower level environments (local, dev) but make QA as prod like as possible

Resources:

## Launch Config for Quotes ASG
  ASGLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      # IamInstanceProfile: !Sub "{{resolve:ssm:/shared/iam/instance-profiles/ec2-base:1}}" # TODO: Add Back in after defining IamInstanceProfile
      ImageId: !Ref InstanceAmi
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups: 
        - !Ref QuotesSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash 
          echo ${EnvironmentValue}

          # Install pre-reqs
          sudo yum update -y
          sudo yum install git -y
          sudo yum install java-1.8.0-openjdk -y

          cd ~
          wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
          chmod a+x lein
          sudo mv lein /usr/bin
          lein

          # Build JARs
          sudo git clone https://github.com/ThoughtWorksInc/infra-problem.git
          cd ~/infra-problem
          sudo make libs
          sudo make clean all
          sudo mkdir /usr/local/quotes
          sudo cp ~/infra-problem/build/quotes.jar /usr/local/quotes/quotes.jar

## ASG
  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      Cooldown: '30'
      DesiredCapacity: !Ref AsgDesiredCapacity
      HealthCheckGracePeriod: 300
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref ASGLaunchConfig
      MaxSize: !Ref AsgMaxSize
      MinSize: !Ref AsgMinSize
      VPCZoneIdentifier:
      - !Sub "{{resolve:ssm:/${EnvironmentValue}/shared/vpc/web-subnet-a:1}}"
      - !If [ProdLikeEnvironment, !Sub "{{resolve:ssm:/${EnvironmentValue}/shared/vpc/web-subnet-b:1}}", !Ref AWS::NoValue]
      - !If [ProdLikeEnvironment, !Sub "{{resolve:ssm:/${EnvironmentValue}/shared/vpc/web-subnet-c:1}}", !Ref AWS::NoValue]       
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentValue}-newsfeed-quotes
          PropagateAtLaunch: True
        - Key: environment
          Value: !Sub ${EnvironmentValue}
          PropagateAtLaunch: True
        - Key: role
          Value: app
          PropagateAtLaunch: True
        - Key: service
          Value: quotes
          PropagateAtLaunch: True
  
  ### Security Groups

  QuotesSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Quotes Security Group"
      GroupName: !Sub "${EnvironmentValue}-newsfeed-quotes-sg"
      VpcId: !Sub "{{resolve:ssm:/${EnvironmentValue}/shared/vpc/vpc-id:1}}"
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentValue}-newsfeed-quotes-sg"
        - Key: environment
          Value: !Ref EnvironmentValue
        - Key: role
          Value: app
        - Key: service
          Value: quotes

  # Quotes service security group parameter (for reference by other templates)
  QuotesSGID:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub "${EnvironmentValue} newsfeed quotes security group id"
      Name: !Sub "/${EnvironmentValue}/newsfeed/security-groups/newsfeed-quotes-sg-id" 
      Value: !Ref QuotesSecurityGroup
      Type: String
